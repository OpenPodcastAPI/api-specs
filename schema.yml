openapi: 3.1.0
info:
  title: Open Podcast API
  version: 1.0.0
  description: API for managing podcast subscriptions.

paths:
  /v1/subscriptions:
    get:
      summary: List subscriptions
      operationId: listSubscriptions
      tags:
        - Subscriptions
      description: |
        Retrieves a paginated list of podcast subscriptions associated with the authenticated user.
      parameters:
        - $ref: "#/components/parameters/PageNumber"
        - $ref: "#/components/parameters/PageSize"
      responses:
        "200":
          description: List of subscriptions successfully returned.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/PaginatedSubscriptionResponse"
              example:
                jsonapi:
                  version: "1.1"
                data:
                  - type: subscription
                    id: ce510f4d-9046-5590-846e-58619ab8b353
                    attributes:
                      feedUrl: https://example.com/rss1
                      userSubscribedAt: 2025-08-24T16:00:00Z
                    links:
                      self: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                      unsubscribe:
                        href: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                        method: DELETE
                links:
                  self: /v1/subscriptions?page[number]=1&page[size]=25
                  first: /v1/subscriptions?page[number]=1&page[size]=25
                  prev: null
                  next: /v1/subscriptions?page[number]=2&page[size]=25
                  last: /v1/subscriptions?page[number]=4&page[size]=25
                meta:
                  total: 100

    post:
      summary: Add a new subscription
      operationId: addSubscription
      tags:
        - Subscriptions
      description: |
        Enables clients to add a new subscription to the system and register the authenticated user as a subscriber.

        The operation is **idempotent**. If the subscription already exists, the server MAY return a `200 OK`.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required: [data]
              properties:
                data:
                  type: object
                  required: [type, id, attributes]
                  properties:
                    type:
                      type: string
                      enum: [subscription]
                      example: subscription
                    id:
                      type: string
                      format: uuid
                      description: UUIDv5 identifying the feed.
                      example: ce510f4d-9046-5590-846e-58619ab8b353
                    attributes:
                      type: object
                      required: [feedUrl]
                      properties:
                        feedUrl:
                          type: string
                          format: uri
                          example: https://example.com/rss1
      responses:
        "201":
          description: Subscription successfully created.
          headers:
            Location:
              description: URI of the created resource
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/SubscriptionResponse"
              example:
                jsonapi:
                  version: "1.1"
                data:
                  type: subscription
                  id: ce510f4d-9046-5590-846e-58619ab8b353
                  attributes:
                    feedUrl: https://example.com/rss1
                    userSubscribedAt: 2025-08-24T16:00:00Z
                  links:
                    self: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                    unsubscribe:
                      href: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                      method: DELETE

        "200":
          description: Subscription already existed; confirmed.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/SubscriptionResponse"
              example:
                jsonapi:
                  version: "1.1"
                data:
                  type: subscription
                  id: ce510f4d-9046-5590-846e-58619ab8b353
                  attributes:
                    feedUrl: https://example.com/rss1
                    userSubscribedAt: 2025-08-24T16:00:00Z
                  links:
                    self: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                    unsubscribe:
                      href: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                      method: DELETE

  /v1/subscriptions/{guid}:
    get:
      summary: Get a subscription
      operationId: getSubscription
      tags:
        - Subscriptions
      description: |
        Fetch a single subscription resource by its globally unique `guid`, associated with the authenticated user.
      parameters:
        - $ref: "#/components/parameters/Guid"
      responses:
        "200":
          description: Subscription found and returned successfully.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/SingleSubscriptionResponse"
              example:
                jsonapi:
                  version: "1.1"
                data:
                  type: subscription
                  id: ce510f4d-9046-5590-846e-58619ab8b353
                  attributes:
                    feedUrl: https://example.com/rss1
                    userSubscribedAt: 2025-08-24T16:00:00Z
                  links:
                    self: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                    unsubscribe:
                      href: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                      method: DELETE

        "400":
          description: The provided GUID is not a valid UUID.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errors:
                  - status: "400"
                    title: "Invalid GUID in request"
                    detail: "The requested GUID is not a UUID value"

        "404":
          description: Subscription not found or inaccessible to the user.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errors:
                  - status: "404"
                    title: "Subscription not found"
                    detail: "The requested subscription does not exist for the user."

    delete:
      summary: Delete a subscription
      operationId: deleteSubscription
      tags:
        - Subscriptions
      description: |
        Removes a subscription for the authenticated user by `guid`.

        The operation is user-specific and does not affect other users subscribed to the same feed.
      parameters:
        - name: guid
          in: path
          required: true
          description: The globally unique identifier (UUIDv5) of the subscription resource.
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Subscription successfully deleted. No content returned.
        "400":
          description: Invalid GUID format.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errors:
                  - status: "400"
                    title: "Invalid GUID in request"
                    detail: "The requested GUID is not a UUID value"

        "404":
          description: Subscription not found for the authenticated user.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errors:
                  - status: "404"
                    title: "Subscription not found"
                    detail: "The requested subscription does not exist for the user."

  /v1/operations:
    post:
      summary: Atomic Operations Endpoint
      operationId: atomicOperation
      tags:
        - Operations
      description: |
        Perform multiple resource-level operations in a single, ordered request using the JSON:API Atomic Operations extension.
        Only supported operations documented by the server should be used.
      requestBody:
        required: true
        content:
          application/vnd.api+json;ext="https://jsonapi.org/ext/atomic":
            schema:
              $ref: "#/components/schemas/AtomicOperationsRequest"
      responses:
        "200":
          description: Atomic operations executed. Each result is reported positionally.
          content:
            application/vnd.api+json;ext="https://jsonapi.org/ext/atomic":
              schema:
                $ref: "#/components/schemas/AtomicOperationsResponse"
              example:
                atomic:results:
                  - data:
                      type: subscription
                      id: b80719b3-1485-57c0-9e55-fda2b8f7472b
                      attributes:
                        feedUrl: https://example.com/rss2
                        userSubscribedAt: 2025-08-27T12:00:00Z
                      links:
                        self: /v1/subscriptions/b80719b3-1485-57c0-9e55-fda2b8f7472b
                        unsubscribe:
                          href: /v1/subscriptions/b80719b3-1485-57c0-9e55-fda2b8f7472b
                          method: DELETE

components:
  parameters:
    Guid:
      name: guid
      in: path
      required: true
      description: The globally unique identifier (UUIDv5) of the subscription resource.
      schema:
        type: string
        format: uuid
        example: ce510f4d-9046-5590-846e-58619ab8b353

    PageNumber:
      name: page[number]
      in: query
      required: false
      description: "The page of results to return (default: 1)."
      schema:
        type: integer
        minimum: 1
        default: 1

    PageSize:
      name: page[size]
      in: query
      required: false
      description: "The number of results per page (default: 25, max: 100)."
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 25

  schemas:
    SubscriptionResponse:
      type: object
      properties:
        jsonapi:
          type: object
          properties:
            version:
              type: string
              example: "1.1"
        data:
          type: object
          required: [type, id, attributes, links]
          properties:
            type:
              type: string
              enum: [subscription]
            id:
              type: string
              format: uuid
              example: ce510f4d-9046-5590-846e-58619ab8b353
            attributes:
              type: object
              properties:
                feedUrl:
                  type: string
                  format: uri
                  example: https://example.com/rss1
                userSubscribedAt:
                  type: string
                  format: date-time
                  example: 2025-08-24T16:00:00Z
            links:
              type: object
              required: [self, unsubscribe]
              properties:
                self:
                  type: string
                  example: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                unsubscribe:
                  type: object
                  required: [href, method]
                  properties:
                    href:
                      type: string
                      example: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                    method:
                      type: string
                      enum: [DELETE]
                      example: DELETE

    Subscription:
      type: object
      required: [type, id, attributes, links]
      properties:
        type:
          type: string
          enum: [subscription]
          example: subscription
        id:
          type: string
          format: uuid
          example: ce510f4d-9046-5590-846e-58619ab8b353
        attributes:
          type: object
          properties:
            feedUrl:
              type: string
              format: uri
              example: https://example.com/rss1
            userSubscribedAt:
              type: string
              format: date-time
              example: 2025-08-24T16:00:00Z
        links:
          type: object
          properties:
            self:
              type: string
              example: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
            unsubscribe:
              type: object
              required: [href, method]
              properties:
                href:
                  type: string
                  example: /v1/subscriptions/ce510f4d-9046-5590-846e-58619ab8b353
                method:
                  type: string
                  enum: [DELETE]
                  example: DELETE

    SingleSubscriptionResponse:
      type: object
      properties:
        jsonapi:
          type: object
          properties:
            version:
              type: string
              example: "1.1"
        data:
          $ref: "#/components/schemas/Subscription"

    PaginationLinks:
      type: object
      properties:
        self:
          type: string
          example: /v1/subscriptions?page[number]=1&page[size]=2
        first:
          type: string
          example: /v1/subscriptions?page[number]=1&page[size]=2
        prev:
          type: string
          nullable: true
          example: null
        next:
          type: string
          nullable: true
          example: /v1/subscriptions?page[number]=2&page[size]=2
        last:
          type: string
          example: /v1/subscriptions?page[number]=5&page[size]=2

    PaginationMeta:
      type: object
      properties:
        total:
          type: integer
          example: 10

    PaginatedSubscriptionResponse:
      type: object
      properties:
        jsonapi:
          type: object
          properties:
            version:
              type: string
              example: "1.1"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Subscription"
        links:
          $ref: "#/components/schemas/PaginationLinks"
        meta:
          $ref: "#/components/schemas/PaginationMeta"

    AtomicOperationsRequest:
      type: object
      required: ["atomic:operations"]
      properties:
        "atomic:operations":
          type: array
          items:
            type: object
            required: [op, data]
            properties:
              op:
                type: string
                enum: [add]
                example: add
              data:
                type: object
                required: [type, attributes]
                properties:
                  type:
                    type: string
                    enum: [subscription]
                    example: subscription
                  id:
                    type: string
                    format: uuid
                    example: b80719b3-1485-57c0-9e55-fda2b8f7472b
                  attributes:
                    type: object
                    required: [feedUrl]
                    properties:
                      feedUrl:
                        type: string
                        format: uri
                        example: https://example.com/rss2

    AtomicOperationsResponse:
      type: object
      required: ["atomic:results"]
      properties:
        "atomic:results":
          type: array
          items:
            oneOf:
              - type: object
                required: [data]
                properties:
                  data:
                    $ref: "#/components/schemas/Subscription"
              - type: object
                required: [errors]
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "#/components/schemas/ErrorResponse"

    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            required: [status, title]
            properties:
              status:
                type: string
                example: "404"
              title:
                type: string
                example: "Subscription not found"
              detail:
                type: string
                example: The requested subscription does not exist for the user.
